
Algoritmo JHCreativo

Inicio
	Var 
	precioTela, costoTotal: real , sesion:entero,contraseña: cadena;
	R: boleano;
	
	//contadores y acumuladores:
	acumTela = 0, acumSub = 0 :Real;
	pedidosCont = 1: Entero;

	//vectores:
	pedidoAux[4], casilla1[6], casilla2[6], casilla3[6], casilla4[6], casilla5[6]: entero;
	tipoR[6] = ["Camisa Chemise","Franela","Camiseta","Jersey","Camisa de Boton","Sueter"]: cadena;
	talla[12] = ["3-4", "5-6", "7-8", "9-11", "12-14", "14-15", "S", "M", "L", "XL", "XXL" ,"XXXL"]: cadena;
	tipoT[6] = ["Atlética", "Micro-durazno", "Dry-Fit", "Terry-Spum", "Algodon", "Semi-Algodón"]: cadena;
	tipoS[5] = ["Sublimación Minimalista", "Sublimación Completa", "Bordado", "Vinil Textil", "DTF"]: cadena;
	diseñosPedidos[5]: cadena;
	
	Mientras (salir =¡ 1) hacer
	InicioSesion(s:sesion, contraseña: cadena);
	Mostrar << InicioSesion;
			Si (sesion = 1) Entonces 	//Sesion Cliente		
		
			Repetir
				pedidoAux = casillasPedidos(e:pedidosCont:entero, e/s: casilla1, casilla2, casilla3, casilla4, casilla5: entero);		

				menuPedido(tipoR,tipoS,tipoT,tipoR:Entero);
				Mostrar << menuPedido;
				precioTela = calcularPrecioTela(pedidoAux: Real);
				calcularCosto(acumTela, acumSub: Real);
				llenarCasillas(e:pedidosCont:entero, e/s: pedidosAux, casilla1, casilla2, casilla3, casilla4, casilla5:entero);
				
				confirmaPedido(e/s: pedidosCont, pedidoAux:entero, tipoR, talla, tela, tipoS:cadena, R:boleano);
				Mostrar << confirmaPedido();

			Hasta (R = 0)
			FinRepetir
			// recibo final
			
			Mostrar << "¡Gracias Por realizar su pedido con nosotros!";
			mostrarCostos(costoTotal, acumSub, acumTela: Real);
			Mostrar << mostrarCostos;

			sino	//Sesion Administrador
						// revisa pedidos
			
		FinSi 
	FinMientras
Fin

procedimiento menuPedido (S:tipoR,tipoS,tipoT,tipoR:Entero);
Inicio
	Var RD: boleano;
		

		Mostrar << "Bienvenido al Sistema De Sublimado de JHCreativo";
		Mostrar << "Elija el tipo de ropa que desee";
		Mostrar<<"1: Camisa Chemise, 2: Franelas , 3: Camiseta , 4: Jersey, 5: Camisa de Botón , 6: Suéter ";
		Leer >>	pedidoAux[1];

		//tipo de ropa
		Mientras (pedidoAux[1] <1 or pedidoAux[1] >6) Hacer;
		Mostrar << "dato invalido, intente con un numero dentro del rango";
		Leer pedidoAux[1];
		FinMientras
		
		  Mostrar<< "Elija la talla que desee";
		Mostrar<< "1: 3-4, 2: 5-6 , 3: 7-8, 4: 9-11, 5: 12-14, 6: 14-15, 7: S, 8: M, 9: L, 10: XL , 11:XXL ,12: XXXL";
		Leer >> pedidoAux[2];

		//talla
		Mientras (pedidoAux[2] <1 or pedidoAux[2] >12) Hacer;
		Mostrar << "dato invalido, intente con un numero dentro del rango";
		Leer pedidoAux[2];
		FinMientras

		Mostrar << "Elija el tipo de tela disponible";
		Mostrar << "1: Atlética: , 2: Micro-durazno, 3: Dry-Fit, 4: Terry-Spum, 5: Algodon, 6: Semi-Algodón .";
		Leer >> pedidoAux[3];
		
		//tipo de tela
		Mientras (pedidoAux[3] <1 or pedidoAux[3] >6) Hacer;
		Mostrar << "dato invalido, intente con un numero dentro del rango";
		Leer pedidoAux[3];
		FinMientras

		Mostrar << "Elija la técnica de sublimaje que necesite";
		Mostrar << "1: Sublimación Minimalista, 2: Sublimación Completa, 3: Bordado, 4: Vinil Textil, 5: DTF";
		Leer >> pedidoAux[4];
		
		//tecnica de sublimaje
		Mientras (pedidoAux[4] <1 or pedidoAux[4] > 6) Hacer;
		Mostrar << "dato invalido, intente con un numero dentro del rango";
		Leer pedidoAux[4];
		FinMientras

		Mostrar << "Elija el diseño que desea, puede elegir un diseño prestablecido o crear uno propio";
		Mostrar << "0 :Ver diseños";
		Mostrar << "1: Crear diseño";
		Leer > RD;

		Si (RD = 0) Entonces // Diseños del Jesus
			Mostrar << ""; //Salto de linea
			Mostrar << ""; 
		SiNo
		Mostrar << "A continuacion escriba el diseño que desea sublimar en su pedido";
		Leer >> diseñosPedidos[pedidosCont];
		Mostrar << "Diseño guardado";
		FinSi

Fin

Procedimiento calcularCosto (E/S:acumTela,acumSub:Real);
Inicio

	//pedido 1
	//chemise, franelas y camisas

	//Costos de Tela
	//chemise, franelas y camisas

	Si (pedidoAux[1] >= 1 or  pedidoAux[1] <= 3) And (pedidoAux[2] >= 1 or pedidoAux[2] <= 5) Entonces;
		// 1mts
		acumTela = acumTela + precioTela;
	Sino
		Si (pedidoAux[1] >= 1 or  pedidoAux[1] <= 3) And (pedidoAux[2] > 5 or pedidoAux[2] <= 9) Entonces;
			/// 1.5 mts
			acumTela = acumTela + (precioTela * 1.5);
		Sino
			Si (pedidoAux[1] >= 1 or  pedidoAux[1] <= 3) And (pedidoAux[2] > 9 or pedidoAux[2] <= 15) Entonces;
				/// 1.75 mts
				acumTela = acumTela + (precioTela * 1.75);
			Sino
				Si (pedidoAux[1] >= 1 or  pedidoAux[1] <= 3) And (pedidoAux[2] > 9 or pedidoAux[2] <= 15) Entonces;
					/// 2.3 mts
					acumTela = acumTela + (precioTela * 2);
				Finsi
			Finsi
		Finsi
	Finsi


	// Jersey, Camisa de Boton y Sueters
	Si (pedidoAux[1] >= 4 or  pedidoAux[1] <= 6) And (pedidoAux[2] >= 1 or pedidoAux[2] <= 5) Entonces;
		// 1.2mts
		acumTela = acumTela + precioTela;
	Sino
		Si (pedidoAux[1] >= 4 or pedidoAux[1] <= 6) And (pedidoAux[2] > 5 or pedidoAux[2] <= 9) Entonces;
			/// 1.75 mts
			acumTela = acumTela + (precioTela * 1.5);
		Sino
			Si (pedidoAux[1] >= 4 or  pedidoAux[1] <= 6) And (pedidoAux[2] > 9 or pedidoAux[2] <= 15) Entonces;
				/// 2.3 mts
				acumTela = acumTela + (precioTela * 2.3);
			Finsi
		Finsi
	Finsi

	//Costo de Sublimaje 
	Si (pedidoAux[4] = 1) Entonces;
			acumSub = acumSub + 2 ;
		Sino
			Si (pedidoAux[4] = 2) Entonces;
				acumSub = acumSub + 20;
			Sino
				Si (tpedidoAux[4] = 3) Entonces;
					acumSub = acumSub + 17;
				Sino
					Si (pedidoAux[4] = 4) Entonces;
						acumSub = acumSub + 16;
					Sino
						acumSub = acumSub + 17;
		     			Finsi
		    		Finsi
		   	Finsi
		Finsi
*/
Fin

mostrarCostos(E/S: acumSub, acumTela: Real);
Inicio
	var costoTotal: real:
	costoTotal = acumSub + acumTela;
	costoTotal = costoTotal + (costoTotal * 0.20);

	Mostrar << "Costes del pedido";
	Mostrar << "Costo en tela: " acumTela;
	Mostrar << "Costo en sublimación: " acumSub;
	Mostrar << "Costo total del pedido: ", costoTotal;

Fin

Funcion calcularPrecioTela (pedidoAux): Real;
Inicio
	precioTAux : Real;
	EnCaso (pedidoAux[3] > 0 pedidoAux[3] <= 6)Sea;
		Caso (pedidoAux[3] = 1);
			precioTAux = 1.50;
	
		Caso (pedidoAux[3] = 2);
			precioTAux = 1.75;
	
		Caso (pedidoAux[3] = 3);
			precioTAux = 2;
	
		Caso (pedidoAux[3] = 4);
			precioTAux = 4;

		Caso (pedidoAux[3] = 5);
			precioTAux = 3;
		Otro Caso
		precioTAux = 2.5;
	FinEnCaso

	Devolver(precioTAux);
Fin

Procedimiento InicionSesion (s:sesion: entero, sesionActiva :boleano, contraseña: cadena); // mejor declararlo entero?
Inicio 
	Mostrar << "Bienvenido, eliga que tipo de sesion desea inciar";
	Mostrar << "1: Cliente";
	Mostrar << "2: Administrador";
	Mostrar << "3: Salir";
	Leer >> sesion;

	Mientras (sesion < 1 or sesion > 3) hacer;
		Mostrar <<"dato invalido, por favor eliga una de las opciones dadas";
		Leer >> sesion; 
	FinMientras

	Si (sesion = 2)Entonces;
 		 Mostrar <<"Ingrese la clave de administrador";
  			Leer >> contraseña;
		
		 Mientras (contraseña =¡ "Admin") Entonces;
		     Mostrar << "contraseña incorrecta, intente de nuevo";
		     Leer >> contraseña;		
		 FinMientras
		Mostrar << "contraseña correcta, sesion inciada como administrador";	
		
		sino
		Si (sesion = 3)Entonces;
		Mostrar <<"Bienvenido, ha iniciado sesion como cliente";
		sino 
		Mostrar "!Vuelva pronto¡";
		salir = 1;
	Finsi
Fin

casillasPedidos(e: pedidosCont: entero, e/s: casilla1, casilla2, casilla3, casilla4, casilla5: entero);
Inicio
	EnCaso (pedidosCont => 1)Sea;
		
		Caso (pedidosCont = 1);
			Devolver (casilla1);

		Caso (pedidosCont = 2);
			Devolver (casilla2);

		Caso (pedidosCont = 3);
			Devolver (casilla3);	
		
		Caso (pedidosCont = 4);
			Devolver (casilla4);	
		
		Caso (pedidosCont = 5);
			Devolver (casilla5);
		
		Otro Caso 
			Devolver (casilla6);

	FinEnCaso 	
Fin

Procedimiento llenarCasillas(e:pedidosCont:entero, e/s: pedidosAux, casilla1, casilla2, casilla3, casilla4, casilla5: entero);
Inicio
	En Caso (pedidosCont > 0);

		Caso (pedidosCont = 1);
		casilla1 = pedidoAux;

		Caso (pedidosCont = 2);
		casilla2 = pedidoAux;

		Caso (pedidosCont = 3);
		casilla3 = pedidoAux;

		Caso (pedidosCont = 4);
		casilla4 = pedidoAux;

		Otro Caso 
		casilla5 = pedidoAux;
	
	FinEnCaso
		
Fin

// opciones antes de culminar el pedido
confirmaPedido(e/s: pedidosCont, pedidoAux: entero, tipoR, talla, tela, tipoS, diseñosPedidos: cadena, R:boleano);
Inicio
	Var RC: boleano;
	Mostrar << "";
	i = 0: entero;
	
	Si (pedidosCont < 6) Entonces
				para (i = 1 hasta i = 6) hacer;
			
			Si (i = 1) Entonces
						Mostrar << tipoR[pedidoAux[1]],", ";	
				SiNo
				Si (i = 2) Entonces
						Mostrar <<"Talla: ", Talla[pedidoAux[2]],", ";
				SiNo
				Si (i = 3) Entonces
						Mostrar <<"Tela "; tela[pedidoAux[3]],", ";
				SiNo
				Si (i = 4) Entonces
						Mostrar << "Tecnica: "tipoS[pedidoAux[4]]".";
				SiNo
			FinSi

		finpara
		
		Mostrar "¿Confirma este pedido? (1: si, 0: no)";
		Leer >> RC;

		Si (RC = 0) Entonces //si no confirma
			Mostrar << "Pedido Cancelado";
			Mostrar << "¿Desea realizar otro pedido? (1:Si, 0: No)";
			Leer >> R;
			
		SiNo // si confirma
			Mostrar "Pedido Realizado con exito";
			Mostrar << "¿Desea realizar otro pedido? (1:Si, 0: No)";
			Leer >> R;
			pedidosCont = pedidosCont + 1;
		FinSi
	
	SiNo
		Mostrar << "Lo sentimos ha alcanzado el limite de pedidos por usuario (5)";
		R = 0;
	FinSi
Fin